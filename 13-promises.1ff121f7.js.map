{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBACrCG,EAAMJ,SAASC,cAAc,yBAC7BI,EAAOL,SAASC,cAAc,QAIpC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAXPJ,EAAIY,iBAAiB,SAerB,SAAqBC,GACnBA,EAAMC,iBAEN,IAAK,IAAIC,EAAI,EAAGA,EAAIhB,EAAYiB,cAAeD,GAAK,EAAG,CACrD,IAAME,EAAUtB,EAAWqB,cAAgBlB,EAAUkB,cAAgBD,EAErEb,EAAca,EAAGE,GACdC,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MACjBgB,EAAA3B,GAAS4B,OAAOC,QACd,qBAAsCC,OAAjBpB,EAAS,EAAE,QAAYoB,OAANnB,EAAM,M,IAG/CoB,OAAM,SAAAL,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MAClBgB,EAAA3B,GAAS4B,OAAOI,QACd,oBAAqCF,OAAjBpB,EAAS,EAAE,QAAYoB,OAANnB,EAAM,M,IAInDH,EAAKyB,O","sources":["src/js/13-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst btn = document.querySelector('button[type=\"submit\"]');\nconst form = document.querySelector(\"form\")\n\nbtn.addEventListener(\"click\", handleClick);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => { \n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleClick(event) {\n  event.preventDefault();\n\n  for (let i = 0; i < amountInput.valueAsNumber; i += 1) {\n    const promise = delayInput.valueAsNumber + stepInput.valueAsNumber * i;\n\n    createPromise(i, promise)\n      .then(({ position, delay }) => { \n        Notiflix.Notify.success(\n          `Fulfilled promise ${position+1} in ${delay}ms`\n          );\n      })\n      .catch(({ position, delay }) => { \n        Notiflix.Notify.failure(\n          `Rejected promise ${position+1} in ${delay}ms`\n          );\n      });\n  }\n  form.reset()\n}\n\n\n"],"names":["$ejkSG","parcelRequire","$d7459f7aceac60a5$var$delayInput","document","querySelector","$d7459f7aceac60a5$var$stepInput","$d7459f7aceac60a5$var$amountInput","$d7459f7aceac60a5$var$btn","$d7459f7aceac60a5$var$form","$d7459f7aceac60a5$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","i","valueAsNumber","promise","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"13-promises.1ff121f7.js.map"}